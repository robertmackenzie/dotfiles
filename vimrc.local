" toggle highlight search
nmap <leader>h :set hls!<CR>

" 4 spaces in JS
autocmd BufRead,BufNewFile *.js setlocal tabstop=4
autocmd BufRead,BufNewFile *.js setlocal shiftwidth=4

" 2 spaces in ruby
autocmd BufRead,BufNewFile *.rb setlocal tabstop=2
autocmd BufRead,BufNewFile *.rb setlocal shiftwidth=2

nnoremap <leader>db :set background=dark<CR>
nnoremap <leader>lb :set background=light<CR>

nnoremap <leader>k :NERDTreeToggle<CR>
let NERDTreeWinSize=40
let NERDTreeMinimalUI=1

" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)

" " Start interactive EasyAlign for a motion/text object (e.g. <Leader>aip)
nmap <Leader>a <Plug>(EasyAlign)

map <c-f> :call JsBeautify()<cr>

set t_Co=256
set background=dark
colorscheme solarized

" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
 exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
 exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
endfunction

autocmd BufRead,BufNewFile *.avsc set filetype=json

" copy to buffer
vmap <leader><leader><C-c> :w! ~/.vimbuffer<CR>
" nmap <C-c> :.w! ~/.vimbuffer<CR>
" write from buffer
map <leader><leader><C-w> :r ~/.vimbuffer<CR>

" open NERDTree
autocmd vimenter * NERDTree

" Syntax coloring lines that are too long just slows down the world
set synmaxcol=256

" scala config
if filereadable($HOME . "/.vimrc.scala.local")
  source ~/.vimrc.scala.local
endif

" Powerline setup
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
